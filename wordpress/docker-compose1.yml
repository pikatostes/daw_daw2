version: '3'
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedbydefault=false
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    wordpress:
  image: wordpress
  restart: unless-stopped
  environment:
    WORDPRESS_DB_HOST: db
    WORDPRESS_DB_USER: wp_user
    WORDPRESS_DB_PASSWORD: wp_password
    WORDPRESS_DB_NAME: wordpress
  labels:
    - "traefik.enable=true"
    - "traefik.http.routers.wordpress.entrypoints=http"
    - "traefik.http.routers.wordpress.rule=Host(`miblog.example.internal`)"
  depends_on:
    - db


  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.enable=true" # necesario si --
      - "traefik.http.routers.whoami.entrypoints=http" # default
      - "traefik.http.routers.whoami.rule=Host(`whoami.midominio.internal`)"

  nginx:
    image: nginx
    restart: unless-stopped
    volumes:
      - ./web:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.entrypoints=http"
      - "traefik.http.routers.nginx.rule=Host(`web.midominio.internal`)"

  phpserver:
    image: php:apache
    restart: unless-stopped
    volumes:
      - ./html:/var/www/html
    labels:
      - "traefik.enable=true"
      # - "traefik.http.routers.apache.entrypoints=http"
      - "traefik.http.routers.apache.rule=Host(`php.otrodominio.internal`)"

